{"ast":null,"code":"var _jsxFileName = \"/Users/titeller/Documents/website/getlinks-rov/src/App.js\";\nimport React, { useEffect } from 'react';\nimport _ from 'lodash';\nimport './App.css';\nimport Team from './Team';\nconst teams = [{\n  name: 'Team 1',\n  players: [{\n    name: 'Tony^3^',\n    nickname: 'Ton',\n    team: 'Engineer'\n  }, {\n    name: 'Raindear',\n    nickname: 'Max',\n    team: 'Operation'\n  }, {\n    name: 'Jirapong',\n    nickname: 'Mod',\n    team: 'Engineer'\n  }, {\n    name: '--#',\n    nickname: 'Heart',\n    team: 'Marketing'\n  }, {\n    name: 'So2ry',\n    nickname: 'Aum',\n    team: 'Product'\n  }]\n}, {\n  name: 'Team 2',\n  players: [{\n    name: 'NPs',\n    nickname: 'Ploy',\n    team: 'Engineer'\n  }, {\n    name: 'Panteros',\n    nickname: 'Tiger',\n    team: 'Sale'\n  }, {\n    name: 'BenKung',\n    nickname: 'Ben',\n    team: 'Engineer'\n  }, {\n    name: 'KAWAN',\n    nickname: 'Khawn',\n    team: 'Marketing'\n  }, {\n    name: 'Omagas',\n    nickname: 'Tong',\n    team: 'Engineer'\n  }]\n}, {\n  name: 'Team 3',\n  players: [{\n    name: 'Ryon',\n    nickname: 'Ryon',\n    team: 'Engineer'\n  }, {\n    name: 'RQu33n',\n    nickname: 'Jun',\n    team: 'Sale'\n  }, {\n    name: 'Ti Teller',\n    nickname: 'Ti',\n    team: 'Engineer'\n  }, {\n    name: 'jameskung12',\n    nickname: 'Jame',\n    team: 'Engineer'\n  }, {\n    name: 'NaiOhAe',\n    nickname: 'Ae',\n    team: 'Engineer'\n  }]\n}, {\n  name: 'Team 4',\n  players: [{\n    name: 'React.js',\n    nickname: 'Mai',\n    team: 'Engineer'\n  }, {\n    name: 'BRG.Mamaan',\n    nickname: 'Man',\n    team: 'Operation'\n  }, {\n    name: 'peanutbutteer',\n    nickname: 'Minion',\n    team: 'Engineer'\n  }, {\n    name: 'InwLuBuZa007+ กาก',\n    nickname: 'Joe',\n    team: 'Engineer'\n  }, {\n    name: 'AUSTIN1975',\n    nickname: 'Non',\n    team: 'Product'\n  }]\n}];\n\nfunction AppComponent() {\n  useEffect(() => {\n    /**\n     * @author Alex Andrix <alex@alexandrix.com>\n     * @since 2018-12-02\n     */\n    var App = {};\n\n    App.setup = function () {\n      var canvas = document.createElement('canvas');\n      this.filename = 'spipa';\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      this.canvas = canvas;\n      document.getElementsByTagName('body')[0].appendChild(canvas);\n      this.ctx = this.canvas.getContext('2d');\n      this.width = this.canvas.width;\n      this.height = this.canvas.height;\n      this.dataToImageRatio = 1;\n      this.ctx.imageSmoothingEnabled = false;\n      this.ctx.webkitImageSmoothingEnabled = false;\n      this.ctx.msImageSmoothingEnabled = false;\n      this.xC = this.width / 2;\n      this.yC = this.height / 2;\n      this.stepCount = 0;\n      this.particles = [];\n      this.lifespan = 1000;\n      this.popPerBirth = 1;\n      this.maxPop = 200;\n      this.birthFreq = 5; // Build grid\n\n      this.gridSize = 8; // Motion coords\n\n      this.gridSteps = Math.floor(1000 / this.gridSize);\n      this.grid = [];\n      var i = 0;\n\n      for (var xx = -500; xx < 500; xx += this.gridSize) {\n        for (var yy = -500; yy < 500; yy += this.gridSize) {\n          // Radial field, triangular function of r with max around r0\n          var r = Math.sqrt(xx * xx + yy * yy),\n              r0 = 100,\n              field;\n          if (r < r0) field = 255 / r0 * r;else if (r > r0) field = 255 - Math.min(255, (r - r0) / 2);\n          this.grid.push({\n            x: xx,\n            y: yy,\n            busyAge: 0,\n            spotIndex: i,\n            isEdge: xx == -500 ? 'left' : xx == -500 + this.gridSize * (this.gridSteps - 1) ? 'right' : yy == -500 ? 'top' : yy == -500 + this.gridSize * (this.gridSteps - 1) ? 'bottom' : false,\n            field: field\n          });\n          i++;\n        }\n      }\n\n      this.gridMaxIndex = i; // Counters for UI\n\n      this.drawnInLastFrame = 0;\n      this.deathCount = 0;\n      this.initDraw();\n    };\n\n    App.evolve = function () {\n      var time1 = performance.now();\n      this.stepCount++; // Increment all grid ages\n\n      this.grid.forEach(function (e) {\n        if (e.busyAge > 0) e.busyAge++;\n      });\n\n      if (this.stepCount % this.birthFreq == 0 && this.particles.length + this.popPerBirth < this.maxPop) {\n        this.birth();\n      }\n\n      App.move();\n      App.draw();\n      var time2 = performance.now(); // Update UI\n\n      document.getElementsByClassName('dead')[0].textContent = this.deathCount;\n      document.getElementsByClassName('alive')[0].textContent = this.particles.length;\n      document.getElementsByClassName('fps')[0].textContent = Math.floor(1000 / (time2 - time1));\n      document.getElementsByClassName('drawn')[0].textContent = this.drawnInLastFrame;\n    };\n\n    App.birth = function () {\n      var x, y;\n      var gridSpotIndex = Math.floor(Math.random() * this.gridMaxIndex),\n          gridSpot = this.grid[gridSpotIndex],\n          x = gridSpot.x,\n          y = gridSpot.y;\n      var particle = {\n        hue: 200,\n        // + Math.floor(50*Math.random()),\n        sat: 95,\n        //30 + Math.floor(70*Math.random()),\n        lum: 20 + Math.floor(40 * Math.random()),\n        x: x,\n        y: y,\n        xLast: x,\n        yLast: y,\n        xSpeed: 0,\n        ySpeed: 0,\n        age: 0,\n        ageSinceStuck: 0,\n        attractor: {\n          oldIndex: gridSpotIndex,\n          gridSpotIndex: gridSpotIndex // Pop at random position on grid\n\n        },\n        name: 'seed-' + Math.ceil(10000000 * Math.random())\n      };\n      this.particles.push(particle);\n    };\n\n    App.kill = function (particleName) {\n      var newArray = _.reject(this.particles, function (seed) {\n        return seed.name == particleName;\n      });\n\n      this.particles = _.cloneDeep(newArray);\n    };\n\n    App.move = function () {\n      for (var i = 0; i < this.particles.length; i++) {\n        // Get particle\n        var p = this.particles[i]; // Save last position\n\n        p.xLast = p.x;\n        p.yLast = p.y; // Attractor and corresponding grid spot\n\n        var index = p.attractor.gridSpotIndex,\n            gridSpot = this.grid[index]; // Maybe move attractor and with certain constraints\n\n        if (Math.random() < 0.5) {\n          // Move attractor\n          if (!gridSpot.isEdge) {\n            // Change particle's attractor grid spot and local move function's grid spot\n            var topIndex = index - 1,\n                bottomIndex = index + 1,\n                leftIndex = index - this.gridSteps,\n                rightIndex = index + this.gridSteps,\n                topSpot = this.grid[topIndex],\n                bottomSpot = this.grid[bottomIndex],\n                leftSpot = this.grid[leftIndex],\n                rightSpot = this.grid[rightIndex]; // Choose neighbour with highest field value (with some desobedience...)\n\n            var chaos = 30;\n\n            var maxFieldSpot = _.maxBy([topSpot, bottomSpot, leftSpot, rightSpot], function (e) {\n              return e.field + chaos * Math.random();\n            });\n\n            var potentialNewGridSpot = maxFieldSpot;\n\n            if (potentialNewGridSpot.busyAge == 0 || potentialNewGridSpot.busyAge > 15) {\n              // Allow wall fading\n              //if (potentialNewGridSpot.busyAge == 0) {// Spots busy forever\n              // Ok it's free let's go there\n              p.ageSinceStuck = 0; // Not stuck anymore yay\n\n              p.attractor.oldIndex = index;\n              p.attractor.gridSpotIndex = potentialNewGridSpot.spotIndex;\n              gridSpot = potentialNewGridSpot;\n              gridSpot.busyAge = 1;\n            } else p.ageSinceStuck++;\n          } else p.ageSinceStuck++;\n\n          if (p.ageSinceStuck == 10) this.kill(p.name);\n        } // Spring attractor to center with viscosity\n\n\n        var k = 8,\n            visc = 0.4;\n        var dx = p.x - gridSpot.x,\n            dy = p.y - gridSpot.y,\n            dist = Math.sqrt(dx * dx + dy * dy); // Spring\n\n        var xAcc = -k * dx,\n            yAcc = -k * dy;\n        p.xSpeed += xAcc;\n        p.ySpeed += yAcc; // Calm the f*ck down\n\n        p.xSpeed *= visc;\n        p.ySpeed *= visc; // Store stuff in particle brain\n\n        p.speed = Math.sqrt(p.xSpeed * p.xSpeed + p.ySpeed * p.ySpeed);\n        p.dist = dist; // Update position\n\n        p.x += 0.1 * p.xSpeed;\n        p.y += 0.1 * p.ySpeed; // Get older\n\n        p.age++; // Kill if too old\n\n        if (p.age > this.lifespan) {\n          this.kill(p.name);\n          this.deathCount++;\n        }\n      }\n    };\n\n    App.initDraw = function () {\n      this.ctx.beginPath();\n      this.ctx.rect(0, 0, this.width, this.height);\n      this.ctx.fillStyle = 'black';\n      this.ctx.fill();\n      this.ctx.closePath();\n    };\n\n    App.draw = function () {\n      this.drawnInLastFrame = 0;\n      if (!this.particles.length) return false;\n      this.ctx.beginPath();\n      this.ctx.rect(0, 0, this.width, this.height);\n      this.ctx.fillStyle = 'rgba(0, 0, 0, 0.1)'; //this.ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\n\n      this.ctx.fill();\n      this.ctx.closePath();\n\n      for (var i = 0; i < this.particles.length; i++) {\n        // Draw particle\n        var p = this.particles[i];\n        var h, s, l, a;\n        h = p.hue + this.stepCount / 30;\n        s = p.sat;\n        l = p.lum;\n        a = 1;\n        var last = this.dataXYtoCanvasXY(p.xLast, p.yLast),\n            now = this.dataXYtoCanvasXY(p.x, p.y);\n        var attracSpot = this.grid[p.attractor.gridSpotIndex],\n            attracXY = this.dataXYtoCanvasXY(attracSpot.x, attracSpot.y);\n        var oldAttracSpot = this.grid[p.attractor.oldIndex],\n            oldAttracXY = this.dataXYtoCanvasXY(oldAttracSpot.x, oldAttracSpot.y);\n        this.ctx.beginPath();\n        this.ctx.strokeStyle = 'hsla(' + h + ', ' + s + '%, ' + l + '%, ' + a + ')';\n        this.ctx.fillStyle = 'hsla(' + h + ', ' + s + '%, ' + l + '%, ' + a + ')'; // Particle trail\n\n        this.ctx.moveTo(last.x, last.y);\n        this.ctx.lineTo(now.x, now.y);\n        this.ctx.lineWidth = 1.5 * this.dataToImageRatio;\n        this.ctx.stroke();\n        this.ctx.closePath(); // Attractor positions\n\n        this.ctx.beginPath();\n        this.ctx.lineWidth = 1.5 * this.dataToImageRatio;\n        this.ctx.moveTo(oldAttracXY.x, oldAttracXY.y);\n        this.ctx.lineTo(attracXY.x, attracXY.y);\n        this.ctx.arc(attracXY.x, attracXY.y, 1.5 * this.dataToImageRatio, 0, 2 * Math.PI, false); //a /= 20;\n\n        this.ctx.strokeStyle = 'hsla(' + h + ', ' + s + '%, ' + l + '%, ' + a + ')';\n        this.ctx.fillStyle = 'hsla(' + h + ', ' + s + '%, ' + l + '%, ' + a + ')';\n        this.ctx.stroke();\n        this.ctx.fill();\n        this.ctx.closePath(); // UI counter\n\n        this.drawnInLastFrame++;\n      }\n    };\n\n    App.dataXYtoCanvasXY = function (x, y) {\n      var zoom = 1.6;\n      var xx = this.xC + x * zoom * this.dataToImageRatio,\n          yy = this.yC + y * zoom * this.dataToImageRatio;\n      return {\n        x: xx,\n        y: yy\n      };\n    };\n\n    App.setup();\n    App.draw();\n\n    var frame = function () {\n      App.evolve();\n      requestAnimationFrame(frame);\n    };\n\n    frame();\n    /**\n     * Some old util I use at times\n     *\n     * @param {Number} Xstart X value of the segment starting point\n     * @param {Number} Ystart Y value of the segment starting point\n     * @param {Number} Xtarget X value of the segment target point\n     * @param {Number} Ytarget Y value of the segment target point\n     * @param {Boolean} realOrWeb true if Real (Y towards top), false if Web (Y towards bottom)\n     * @returns {Number} Angle between 0 and 2PI\n     */\n\n    const segmentAngleRad = function (Xstart, Ystart, Xtarget, Ytarget, realOrWeb) {\n      var result; // Will range between 0 and 2PI\n\n      if (Xstart == Xtarget) {\n        if (Ystart == Ytarget) {\n          result = 0;\n        } else if (Ystart < Ytarget) {\n          result = Math.PI / 2;\n        } else if (Ystart > Ytarget) {\n          result = 3 * Math.PI / 2;\n        } else {}\n      } else if (Xstart < Xtarget) {\n        result = Math.atan((Ytarget - Ystart) / (Xtarget - Xstart));\n      } else if (Xstart > Xtarget) {\n        result = Math.PI + Math.atan((Ytarget - Ystart) / (Xtarget - Xstart));\n      }\n\n      result = (result + 2 * Math.PI) % (2 * Math.PI);\n\n      if (!realOrWeb) {\n        result = 2 * Math.PI - result;\n      }\n\n      return result;\n    };\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"zoom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"zoom zoomin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"span\", {\n    className: \"zoom zoomout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503\n    },\n    __self: this\n  }, \"-\")), React.createElement(\"p\", {\n    className: \"zoomlevel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"percent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506\n    },\n    __self: this\n  }, \"100\"), \" % - (\", React.createElement(\"span\", {\n    className: \"width\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506\n    },\n    __self: this\n  }), \"px)(\", React.createElement(\"span\", {\n    className: \"height\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508\n    },\n    __self: this\n  }), \"px)\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511\n    },\n    __self: this\n  }, \"Dead: \", React.createElement(\"span\", {\n    className: \"dead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512\n    },\n    __self: this\n  }, \"0\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514\n    },\n    __self: this\n  }, \"Alive: \", React.createElement(\"span\", {\n    className: \"alive\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515\n    },\n    __self: this\n  }, \"0\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517\n    },\n    __self: this\n  }, \"Drawn: \", React.createElement(\"span\", {\n    className: \"drawn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518\n    },\n    __self: this\n  }, \"0\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"fps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521\n    },\n    __self: this\n  }, \"0\"), \" FPS\"), React.createElement(\"a\", {\n    className: \"save\",\n    href: \"\",\n    download: \"capture.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523\n    },\n    __self: this\n  }, \"Save\")), React.createElement(\"img\", {\n    className: \"App-logo\",\n    src: \"https://s3.ap-southeast-1.amazonaws.com/getlinks-files/static-web-image/getlinks_logo.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"App-teams\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533\n    },\n    __self: this\n  }, teams.map(team => React.createElement(Team, {\n    key: team.name,\n    name: team.name,\n    players: team.players,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535\n    },\n    __self: this\n  }))));\n}\n\nexport default AppComponent;","map":{"version":3,"sources":["/Users/titeller/Documents/website/getlinks-rov/src/App.js"],"names":["React","useEffect","_","Team","teams","name","players","nickname","team","AppComponent","App","setup","canvas","document","createElement","filename","width","window","innerWidth","height","innerHeight","getElementsByTagName","appendChild","ctx","getContext","dataToImageRatio","imageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","xC","yC","stepCount","particles","lifespan","popPerBirth","maxPop","birthFreq","gridSize","gridSteps","Math","floor","grid","i","xx","yy","r","sqrt","r0","field","min","push","x","y","busyAge","spotIndex","isEdge","gridMaxIndex","drawnInLastFrame","deathCount","initDraw","evolve","time1","performance","now","forEach","e","length","birth","move","draw","time2","getElementsByClassName","textContent","gridSpotIndex","random","gridSpot","particle","hue","sat","lum","xLast","yLast","xSpeed","ySpeed","age","ageSinceStuck","attractor","oldIndex","ceil","kill","particleName","newArray","reject","seed","cloneDeep","p","index","topIndex","bottomIndex","leftIndex","rightIndex","topSpot","bottomSpot","leftSpot","rightSpot","chaos","maxFieldSpot","maxBy","potentialNewGridSpot","k","visc","dx","dy","dist","xAcc","yAcc","speed","beginPath","rect","fillStyle","fill","closePath","h","s","l","a","last","dataXYtoCanvasXY","attracSpot","attracXY","oldAttracSpot","oldAttracXY","strokeStyle","moveTo","lineTo","lineWidth","stroke","arc","PI","zoom","frame","requestAnimationFrame","segmentAngleRad","Xstart","Ystart","Xtarget","Ytarget","realOrWeb","result","atan","map"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport _ from 'lodash'\nimport './App.css'\nimport Team from './Team'\n\nconst teams = [\n  {\n    name: 'Team 1',\n    players: [\n      {\n        name: 'Tony^3^',\n        nickname: 'Ton',\n        team: 'Engineer'\n      },\n      {\n        name: 'Raindear',\n        nickname: 'Max',\n        team: 'Operation'\n      },\n      {\n        name: 'Jirapong',\n        nickname: 'Mod',\n        team: 'Engineer'\n      },\n      {\n        name: '--#',\n        nickname: 'Heart',\n        team: 'Marketing'\n      },\n      {\n        name: 'So2ry',\n        nickname: 'Aum',\n        team: 'Product'\n      }\n    ]\n  },\n  {\n    name: 'Team 2',\n    players: [\n      {\n        name: 'NPs',\n        nickname: 'Ploy',\n        team: 'Engineer'\n      },\n      {\n        name: 'Panteros',\n        nickname: 'Tiger',\n        team: 'Sale'\n      },\n      {\n        name: 'BenKung',\n        nickname: 'Ben',\n        team: 'Engineer'\n      },\n      {\n        name: 'KAWAN',\n        nickname: 'Khawn',\n        team: 'Marketing'\n      },\n      {\n        name: 'Omagas',\n        nickname: 'Tong',\n        team: 'Engineer'\n      }\n    ]\n  },\n  {\n    name: 'Team 3',\n    players: [\n      {\n        name: 'Ryon',\n        nickname: 'Ryon',\n        team: 'Engineer'\n      },\n      {\n        name: 'RQu33n',\n        nickname: 'Jun',\n        team: 'Sale'\n      },\n      {\n        name: 'Ti Teller',\n        nickname: 'Ti',\n        team: 'Engineer'\n      },\n      {\n        name: 'jameskung12',\n        nickname: 'Jame',\n        team: 'Engineer'\n      },\n      {\n        name: 'NaiOhAe',\n        nickname: 'Ae',\n        team: 'Engineer'\n      }\n    ]\n  },\n  {\n    name: 'Team 4',\n    players: [\n      {\n        name: 'React.js',\n        nickname: 'Mai',\n        team: 'Engineer'\n      },\n      {\n        name: 'BRG.Mamaan',\n        nickname: 'Man',\n        team: 'Operation'\n      },\n      {\n        name: 'peanutbutteer',\n        nickname: 'Minion',\n        team: 'Engineer'\n      },\n      {\n        name: 'InwLuBuZa007+ กาก',\n        nickname: 'Joe',\n        team: 'Engineer'\n      },\n      {\n        name: 'AUSTIN1975',\n        nickname: 'Non',\n        team: 'Product'\n      }\n    ]\n  }\n]\nfunction AppComponent() {\n  useEffect(() => {\n    /**\n     * @author Alex Andrix <alex@alexandrix.com>\n     * @since 2018-12-02\n     */\n\n    var App = {}\n    App.setup = function() {\n      var canvas = document.createElement('canvas')\n      this.filename = 'spipa'\n      canvas.width = window.innerWidth\n      canvas.height = window.innerHeight\n      this.canvas = canvas\n      document.getElementsByTagName('body')[0].appendChild(canvas)\n      this.ctx = this.canvas.getContext('2d')\n      this.width = this.canvas.width\n      this.height = this.canvas.height\n      this.dataToImageRatio = 1\n      this.ctx.imageSmoothingEnabled = false\n      this.ctx.webkitImageSmoothingEnabled = false\n      this.ctx.msImageSmoothingEnabled = false\n      this.xC = this.width / 2\n      this.yC = this.height / 2\n\n      this.stepCount = 0\n      this.particles = []\n      this.lifespan = 1000\n      this.popPerBirth = 1\n      this.maxPop = 200\n      this.birthFreq = 5\n\n      // Build grid\n      this.gridSize = 8 // Motion coords\n      this.gridSteps = Math.floor(1000 / this.gridSize)\n      this.grid = []\n      var i = 0\n      for (var xx = -500; xx < 500; xx += this.gridSize) {\n        for (var yy = -500; yy < 500; yy += this.gridSize) {\n          // Radial field, triangular function of r with max around r0\n          var r = Math.sqrt(xx * xx + yy * yy),\n            r0 = 100,\n            field\n\n          if (r < r0) field = (255 / r0) * r\n          else if (r > r0) field = 255 - Math.min(255, (r - r0) / 2)\n\n          this.grid.push({\n            x: xx,\n            y: yy,\n            busyAge: 0,\n            spotIndex: i,\n            isEdge:\n              xx == -500\n                ? 'left'\n                : xx == -500 + this.gridSize * (this.gridSteps - 1)\n                ? 'right'\n                : yy == -500\n                ? 'top'\n                : yy == -500 + this.gridSize * (this.gridSteps - 1)\n                ? 'bottom'\n                : false,\n            field: field\n          })\n          i++\n        }\n      }\n      this.gridMaxIndex = i\n\n      // Counters for UI\n      this.drawnInLastFrame = 0\n      this.deathCount = 0\n\n      this.initDraw()\n    }\n    App.evolve = function() {\n      var time1 = performance.now()\n\n      this.stepCount++\n\n      // Increment all grid ages\n      this.grid.forEach(function(e) {\n        if (e.busyAge > 0) e.busyAge++\n      })\n\n      if (\n        this.stepCount % this.birthFreq == 0 &&\n        this.particles.length + this.popPerBirth < this.maxPop\n      ) {\n        this.birth()\n      }\n      App.move()\n      App.draw()\n\n      var time2 = performance.now()\n\n      // Update UI\n      document.getElementsByClassName('dead')[0].textContent = this.deathCount\n      document.getElementsByClassName(\n        'alive'\n      )[0].textContent = this.particles.length\n      document.getElementsByClassName('fps')[0].textContent = Math.floor(\n        1000 / (time2 - time1)\n      )\n      document.getElementsByClassName(\n        'drawn'\n      )[0].textContent = this.drawnInLastFrame\n    }\n    App.birth = function() {\n      var x, y\n      var gridSpotIndex = Math.floor(Math.random() * this.gridMaxIndex),\n        gridSpot = this.grid[gridSpotIndex],\n        x = gridSpot.x,\n        y = gridSpot.y\n\n      var particle = {\n        hue: 200, // + Math.floor(50*Math.random()),\n        sat: 95, //30 + Math.floor(70*Math.random()),\n        lum: 20 + Math.floor(40 * Math.random()),\n        x: x,\n        y: y,\n        xLast: x,\n        yLast: y,\n        xSpeed: 0,\n        ySpeed: 0,\n        age: 0,\n        ageSinceStuck: 0,\n        attractor: {\n          oldIndex: gridSpotIndex,\n          gridSpotIndex: gridSpotIndex // Pop at random position on grid\n        },\n        name: 'seed-' + Math.ceil(10000000 * Math.random())\n      }\n      this.particles.push(particle)\n    }\n    App.kill = function(particleName) {\n      var newArray = _.reject(this.particles, function(seed) {\n        return seed.name == particleName\n      })\n      this.particles = _.cloneDeep(newArray)\n    }\n    App.move = function() {\n      for (var i = 0; i < this.particles.length; i++) {\n        // Get particle\n        var p = this.particles[i]\n\n        // Save last position\n        p.xLast = p.x\n        p.yLast = p.y\n\n        // Attractor and corresponding grid spot\n        var index = p.attractor.gridSpotIndex,\n          gridSpot = this.grid[index]\n\n        // Maybe move attractor and with certain constraints\n        if (Math.random() < 0.5) {\n          // Move attractor\n          if (!gridSpot.isEdge) {\n            // Change particle's attractor grid spot and local move function's grid spot\n            var topIndex = index - 1,\n              bottomIndex = index + 1,\n              leftIndex = index - this.gridSteps,\n              rightIndex = index + this.gridSteps,\n              topSpot = this.grid[topIndex],\n              bottomSpot = this.grid[bottomIndex],\n              leftSpot = this.grid[leftIndex],\n              rightSpot = this.grid[rightIndex]\n\n            // Choose neighbour with highest field value (with some desobedience...)\n            var chaos = 30\n            var maxFieldSpot = _.maxBy(\n              [topSpot, bottomSpot, leftSpot, rightSpot],\n              function(e) {\n                return e.field + chaos * Math.random()\n              }\n            )\n\n            var potentialNewGridSpot = maxFieldSpot\n            if (\n              potentialNewGridSpot.busyAge == 0 ||\n              potentialNewGridSpot.busyAge > 15\n            ) {\n              // Allow wall fading\n              //if (potentialNewGridSpot.busyAge == 0) {// Spots busy forever\n              // Ok it's free let's go there\n              p.ageSinceStuck = 0 // Not stuck anymore yay\n              p.attractor.oldIndex = index\n              p.attractor.gridSpotIndex = potentialNewGridSpot.spotIndex\n              gridSpot = potentialNewGridSpot\n              gridSpot.busyAge = 1\n            } else p.ageSinceStuck++\n          } else p.ageSinceStuck++\n\n          if (p.ageSinceStuck == 10) this.kill(p.name)\n        }\n\n        // Spring attractor to center with viscosity\n        var k = 8,\n          visc = 0.4\n        var dx = p.x - gridSpot.x,\n          dy = p.y - gridSpot.y,\n          dist = Math.sqrt(dx * dx + dy * dy)\n\n        // Spring\n        var xAcc = -k * dx,\n          yAcc = -k * dy\n\n        p.xSpeed += xAcc\n        p.ySpeed += yAcc\n\n        // Calm the f*ck down\n        p.xSpeed *= visc\n        p.ySpeed *= visc\n\n        // Store stuff in particle brain\n        p.speed = Math.sqrt(p.xSpeed * p.xSpeed + p.ySpeed * p.ySpeed)\n        p.dist = dist\n\n        // Update position\n        p.x += 0.1 * p.xSpeed\n        p.y += 0.1 * p.ySpeed\n\n        // Get older\n        p.age++\n\n        // Kill if too old\n        if (p.age > this.lifespan) {\n          this.kill(p.name)\n          this.deathCount++\n        }\n      }\n    }\n    App.initDraw = function() {\n      this.ctx.beginPath()\n      this.ctx.rect(0, 0, this.width, this.height)\n      this.ctx.fillStyle = 'black'\n      this.ctx.fill()\n      this.ctx.closePath()\n    }\n    App.draw = function() {\n      this.drawnInLastFrame = 0\n      if (!this.particles.length) return false\n\n      this.ctx.beginPath()\n      this.ctx.rect(0, 0, this.width, this.height)\n      this.ctx.fillStyle = 'rgba(0, 0, 0, 0.1)'\n      //this.ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\n      this.ctx.fill()\n      this.ctx.closePath()\n\n      for (var i = 0; i < this.particles.length; i++) {\n        // Draw particle\n        var p = this.particles[i]\n\n        var h, s, l, a\n\n        h = p.hue + this.stepCount / 30\n        s = p.sat\n        l = p.lum\n        a = 1\n\n        var last = this.dataXYtoCanvasXY(p.xLast, p.yLast),\n          now = this.dataXYtoCanvasXY(p.x, p.y)\n        var attracSpot = this.grid[p.attractor.gridSpotIndex],\n          attracXY = this.dataXYtoCanvasXY(attracSpot.x, attracSpot.y)\n        var oldAttracSpot = this.grid[p.attractor.oldIndex],\n          oldAttracXY = this.dataXYtoCanvasXY(oldAttracSpot.x, oldAttracSpot.y)\n\n        this.ctx.beginPath()\n\n        this.ctx.strokeStyle =\n          'hsla(' + h + ', ' + s + '%, ' + l + '%, ' + a + ')'\n        this.ctx.fillStyle =\n          'hsla(' + h + ', ' + s + '%, ' + l + '%, ' + a + ')'\n\n        // Particle trail\n        this.ctx.moveTo(last.x, last.y)\n        this.ctx.lineTo(now.x, now.y)\n\n        this.ctx.lineWidth = 1.5 * this.dataToImageRatio\n        this.ctx.stroke()\n        this.ctx.closePath()\n\n        // Attractor positions\n        this.ctx.beginPath()\n        this.ctx.lineWidth = 1.5 * this.dataToImageRatio\n        this.ctx.moveTo(oldAttracXY.x, oldAttracXY.y)\n        this.ctx.lineTo(attracXY.x, attracXY.y)\n        this.ctx.arc(\n          attracXY.x,\n          attracXY.y,\n          1.5 * this.dataToImageRatio,\n          0,\n          2 * Math.PI,\n          false\n        )\n\n        //a /= 20;\n        this.ctx.strokeStyle =\n          'hsla(' + h + ', ' + s + '%, ' + l + '%, ' + a + ')'\n        this.ctx.fillStyle =\n          'hsla(' + h + ', ' + s + '%, ' + l + '%, ' + a + ')'\n        this.ctx.stroke()\n        this.ctx.fill()\n\n        this.ctx.closePath()\n\n        // UI counter\n        this.drawnInLastFrame++\n      }\n    }\n    App.dataXYtoCanvasXY = function(x, y) {\n      var zoom = 1.6\n      var xx = this.xC + x * zoom * this.dataToImageRatio,\n        yy = this.yC + y * zoom * this.dataToImageRatio\n\n      return { x: xx, y: yy }\n    }\n\n    App.setup()\n    App.draw()\n\n    var frame = function() {\n      App.evolve()\n      requestAnimationFrame(frame)\n    }\n    frame()\n\n    /**\n     * Some old util I use at times\n     *\n     * @param {Number} Xstart X value of the segment starting point\n     * @param {Number} Ystart Y value of the segment starting point\n     * @param {Number} Xtarget X value of the segment target point\n     * @param {Number} Ytarget Y value of the segment target point\n     * @param {Boolean} realOrWeb true if Real (Y towards top), false if Web (Y towards bottom)\n     * @returns {Number} Angle between 0 and 2PI\n     */\n    const segmentAngleRad = function(\n      Xstart,\n      Ystart,\n      Xtarget,\n      Ytarget,\n      realOrWeb\n    ) {\n      var result // Will range between 0 and 2PI\n      if (Xstart == Xtarget) {\n        if (Ystart == Ytarget) {\n          result = 0\n        } else if (Ystart < Ytarget) {\n          result = Math.PI / 2\n        } else if (Ystart > Ytarget) {\n          result = (3 * Math.PI) / 2\n        } else {\n        }\n      } else if (Xstart < Xtarget) {\n        result = Math.atan((Ytarget - Ystart) / (Xtarget - Xstart))\n      } else if (Xstart > Xtarget) {\n        result = Math.PI + Math.atan((Ytarget - Ystart) / (Xtarget - Xstart))\n      }\n\n      result = (result + 2 * Math.PI) % (2 * Math.PI)\n\n      if (!realOrWeb) {\n        result = 2 * Math.PI - result\n      }\n\n      return result\n    }\n  }, [])\n  return (\n    <div className=\"App\">\n      <div className=\"ui\">\n        <p className=\"zoom\">\n          <span className=\"zoom zoomin\">+</span>\n          <span className=\"zoom zoomout\">-</span>\n        </p>\n        <p className=\"zoomlevel\">\n          <span className=\"percent\">100</span> % - (<span className=\"width\" />\n          px)(\n          <span className=\"height\" />\n          px)\n        </p>\n        <p>\n          Dead: <span className=\"dead\">0</span>\n        </p>\n        <p>\n          Alive: <span className=\"alive\">0</span>\n        </p>\n        <p>\n          Drawn: <span className=\"drawn\">0</span>\n        </p>\n        <p>\n          <span className=\"fps\">0</span> FPS\n        </p>\n        <a className=\"save\" href=\"\" download=\"capture.png\">\n          Save\n        </a>\n      </div>\n\n      <img\n        className=\"App-logo\"\n        src=\"https://s3.ap-southeast-1.amazonaws.com/getlinks-files/static-web-image/getlinks_logo.png\"\n      />\n\n      <div className=\"App-teams\">\n        {teams.map(team => (\n          <Team key={team.name} name={team.name} players={team.players} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default AppComponent\n"]},"metadata":{},"sourceType":"module"}