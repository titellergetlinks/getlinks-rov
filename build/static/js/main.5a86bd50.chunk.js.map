{"version":3,"sources":["Team.js","App.js","serviceWorker.js","index.js"],"names":["Team","_ref","name","players","react_default","a","createElement","className","map","_ref2","nickname","team","key","concat","teams","AppComponent","useEffect","App","canvas","document","this","filename","width","window","innerWidth","height","innerHeight","getElementsByTagName","appendChild","ctx","getContext","dataToImageRatio","imageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","xC","yC","stepCount","particles","lifespan","popPerBirth","maxPop","birthFreq","gridSize","gridSteps","Math","floor","grid","i","xx","yy","field","r","sqrt","min","push","x","y","busyAge","spotIndex","isEdge","gridMaxIndex","drawnInLastFrame","deathCount","initDraw","time1","performance","now","forEach","e","length","birth","move","draw","time2","getElementsByClassName","textContent","gridSpotIndex","random","gridSpot","particle","hue","sat","lum","xLast","yLast","xSpeed","ySpeed","age","ageSinceStuck","attractor","oldIndex","ceil","particleName","newArray","_","reject","seed","cloneDeep","p","index","topIndex","bottomIndex","leftIndex","rightIndex","topSpot","bottomSpot","leftSpot","rightSpot","potentialNewGridSpot","maxBy","kill","dx","dy","dist","xAcc","yAcc","speed","beginPath","rect","fillStyle","fill","closePath","h","s","l","last","dataXYtoCanvasXY","attracSpot","attracXY","oldAttracSpot","oldAttracXY","strokeStyle","moveTo","lineTo","lineWidth","stroke","arc","PI","setup","frame","evolve","requestAnimationFrame","href","download","src","src_Team","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a86bd50.chunk.js","sourcesContent":["import React from 'react'\nimport './Team.css'\n\nfunction Team({ name, players }) {\n  return (\n    <div className=\"Team\">\n      <div className=\"Team-name\">{name}</div>\n      <div className=\"Team-players\">\n        {players.map(({ name, nickname, team }) => <div key={nickname}>{`${name} - ${nickname} (${team})`}</div>)}\n      </div>\n    </div>\n  )\n}\n\nexport default Team\n","import React, { useEffect } from 'react'\nimport _ from 'lodash'\nimport './App.css'\nimport Team from './Team'\n\nconst teams = [\n  {\n    name: 'Team 1',\n    players: [\n      {\n        name: 'Tony^3^',\n        nickname: 'Ton',\n        team: 'Engineer'\n      },\n      {\n        name: 'Raindear',\n        nickname: 'Max',\n        team: 'Operation'\n      },\n      {\n        name: 'Jirapong',\n        nickname: 'Mod',\n        team: 'Engineer'\n      },\n      {\n        name: '--#',\n        nickname: 'Heart',\n        team: 'Marketing'\n      },\n      {\n        name: 'So2ry',\n        nickname: 'Aum',\n        team: 'Product'\n      }\n    ]\n  },\n  {\n    name: 'Team 2',\n    players: [\n      {\n        name: 'NPs',\n        nickname: 'Ploy',\n        team: 'Engineer'\n      },\n      {\n        name: 'Panteros',\n        nickname: 'Tiger',\n        team: 'Sale'\n      },\n      {\n        name: 'BenKung',\n        nickname: 'Ben',\n        team: 'Engineer'\n      },\n      {\n        name: 'KAWAN',\n        nickname: 'Khawn',\n        team: 'Marketing'\n      },\n      {\n        name: 'Omagas',\n        nickname: 'Tong',\n        team: 'Engineer'\n      }\n    ]\n  },\n  {\n    name: 'Team 3',\n    players: [\n      {\n        name: 'Ryon',\n        nickname: 'Ryon',\n        team: 'Engineer'\n      },\n      {\n        name: 'RQu33n',\n        nickname: 'Jun',\n        team: 'Sale'\n      },\n      {\n        name: 'Ti Teller',\n        nickname: 'Ti',\n        team: 'Engineer'\n      },\n      {\n        name: 'jameskung12',\n        nickname: 'Jame',\n        team: 'Engineer'\n      },\n      {\n        name: 'NaiOhAe',\n        nickname: 'Ae',\n        team: 'Engineer'\n      }\n    ]\n  },\n  {\n    name: 'Team 4',\n    players: [\n      {\n        name: 'React.js',\n        nickname: 'Mai',\n        team: 'Engineer'\n      },\n      {\n        name: 'BRG.Mamaan',\n        nickname: 'Man',\n        team: 'Operation'\n      },\n      {\n        name: 'peanutbutteer',\n        nickname: 'Minion',\n        team: 'Engineer'\n      },\n      {\n        name: 'InwLuBuZa007+ กาก',\n        nickname: 'Joe',\n        team: 'Engineer'\n      },\n      {\n        name: 'AUSTIN1975',\n        nickname: 'Non',\n        team: 'Product'\n      }\n    ]\n  }\n]\nfunction AppComponent() {\n  useEffect(() => {\n    /**\n     * @author Alex Andrix <alex@alexandrix.com>\n     * @since 2018-12-02\n     */\n\n    var App = {}\n    App.setup = function() {\n      var canvas = document.createElement('canvas')\n      this.filename = 'spipa'\n      canvas.width = window.innerWidth\n      canvas.height = window.innerHeight\n      this.canvas = canvas\n      document.getElementsByTagName('body')[0].appendChild(canvas)\n      this.ctx = this.canvas.getContext('2d')\n      this.width = this.canvas.width\n      this.height = this.canvas.height\n      this.dataToImageRatio = 1\n      this.ctx.imageSmoothingEnabled = false\n      this.ctx.webkitImageSmoothingEnabled = false\n      this.ctx.msImageSmoothingEnabled = false\n      this.xC = this.width / 2\n      this.yC = this.height / 2\n\n      this.stepCount = 0\n      this.particles = []\n      this.lifespan = 1000\n      this.popPerBirth = 1\n      this.maxPop = 200\n      this.birthFreq = 5\n\n      // Build grid\n      this.gridSize = 8 // Motion coords\n      this.gridSteps = Math.floor(1000 / this.gridSize)\n      this.grid = []\n      var i = 0\n      for (var xx = -500; xx < 500; xx += this.gridSize) {\n        for (var yy = -500; yy < 500; yy += this.gridSize) {\n          // Radial field, triangular function of r with max around r0\n          var r = Math.sqrt(xx * xx + yy * yy),\n            r0 = 100,\n            field\n\n          if (r < r0) field = (255 / r0) * r\n          else if (r > r0) field = 255 - Math.min(255, (r - r0) / 2)\n\n          this.grid.push({\n            x: xx,\n            y: yy,\n            busyAge: 0,\n            spotIndex: i,\n            isEdge:\n              xx == -500\n                ? 'left'\n                : xx == -500 + this.gridSize * (this.gridSteps - 1)\n                ? 'right'\n                : yy == -500\n                ? 'top'\n                : yy == -500 + this.gridSize * (this.gridSteps - 1)\n                ? 'bottom'\n                : false,\n            field: field\n          })\n          i++\n        }\n      }\n      this.gridMaxIndex = i\n\n      // Counters for UI\n      this.drawnInLastFrame = 0\n      this.deathCount = 0\n\n      this.initDraw()\n    }\n    App.evolve = function() {\n      var time1 = performance.now()\n\n      this.stepCount++\n\n      // Increment all grid ages\n      this.grid.forEach(function(e) {\n        if (e.busyAge > 0) e.busyAge++\n      })\n\n      if (\n        this.stepCount % this.birthFreq == 0 &&\n        this.particles.length + this.popPerBirth < this.maxPop\n      ) {\n        this.birth()\n      }\n      App.move()\n      App.draw()\n\n      var time2 = performance.now()\n\n      // Update UI\n      document.getElementsByClassName('dead')[0].textContent = this.deathCount\n      document.getElementsByClassName(\n        'alive'\n      )[0].textContent = this.particles.length\n      document.getElementsByClassName('fps')[0].textContent = Math.floor(\n        1000 / (time2 - time1)\n      )\n      document.getElementsByClassName(\n        'drawn'\n      )[0].textContent = this.drawnInLastFrame\n    }\n    App.birth = function() {\n      var x, y\n      var gridSpotIndex = Math.floor(Math.random() * this.gridMaxIndex),\n        gridSpot = this.grid[gridSpotIndex],\n        x = gridSpot.x,\n        y = gridSpot.y\n\n      var particle = {\n        hue: 200, // + Math.floor(50*Math.random()),\n        sat: 95, //30 + Math.floor(70*Math.random()),\n        lum: 20 + Math.floor(40 * Math.random()),\n        x: x,\n        y: y,\n        xLast: x,\n        yLast: y,\n        xSpeed: 0,\n        ySpeed: 0,\n        age: 0,\n        ageSinceStuck: 0,\n        attractor: {\n          oldIndex: gridSpotIndex,\n          gridSpotIndex: gridSpotIndex // Pop at random position on grid\n        },\n        name: 'seed-' + Math.ceil(10000000 * Math.random())\n      }\n      this.particles.push(particle)\n    }\n    App.kill = function(particleName) {\n      var newArray = _.reject(this.particles, function(seed) {\n        return seed.name == particleName\n      })\n      this.particles = _.cloneDeep(newArray)\n    }\n    App.move = function() {\n      for (var i = 0; i < this.particles.length; i++) {\n        // Get particle\n        var p = this.particles[i]\n\n        // Save last position\n        p.xLast = p.x\n        p.yLast = p.y\n\n        // Attractor and corresponding grid spot\n        var index = p.attractor.gridSpotIndex,\n          gridSpot = this.grid[index]\n\n        // Maybe move attractor and with certain constraints\n        if (Math.random() < 0.5) {\n          // Move attractor\n          if (!gridSpot.isEdge) {\n            // Change particle's attractor grid spot and local move function's grid spot\n            var topIndex = index - 1,\n              bottomIndex = index + 1,\n              leftIndex = index - this.gridSteps,\n              rightIndex = index + this.gridSteps,\n              topSpot = this.grid[topIndex],\n              bottomSpot = this.grid[bottomIndex],\n              leftSpot = this.grid[leftIndex],\n              rightSpot = this.grid[rightIndex]\n\n            // Choose neighbour with highest field value (with some desobedience...)\n            var chaos = 30\n            var maxFieldSpot = _.maxBy(\n              [topSpot, bottomSpot, leftSpot, rightSpot],\n              function(e) {\n                return e.field + chaos * Math.random()\n              }\n            )\n\n            var potentialNewGridSpot = maxFieldSpot\n            if (\n              potentialNewGridSpot.busyAge == 0 ||\n              potentialNewGridSpot.busyAge > 15\n            ) {\n              // Allow wall fading\n              //if (potentialNewGridSpot.busyAge == 0) {// Spots busy forever\n              // Ok it's free let's go there\n              p.ageSinceStuck = 0 // Not stuck anymore yay\n              p.attractor.oldIndex = index\n              p.attractor.gridSpotIndex = potentialNewGridSpot.spotIndex\n              gridSpot = potentialNewGridSpot\n              gridSpot.busyAge = 1\n            } else p.ageSinceStuck++\n          } else p.ageSinceStuck++\n\n          if (p.ageSinceStuck == 10) this.kill(p.name)\n        }\n\n        // Spring attractor to center with viscosity\n        var k = 8,\n          visc = 0.4\n        var dx = p.x - gridSpot.x,\n          dy = p.y - gridSpot.y,\n          dist = Math.sqrt(dx * dx + dy * dy)\n\n        // Spring\n        var xAcc = -k * dx,\n          yAcc = -k * dy\n\n        p.xSpeed += xAcc\n        p.ySpeed += yAcc\n\n        // Calm the f*ck down\n        p.xSpeed *= visc\n        p.ySpeed *= visc\n\n        // Store stuff in particle brain\n        p.speed = Math.sqrt(p.xSpeed * p.xSpeed + p.ySpeed * p.ySpeed)\n        p.dist = dist\n\n        // Update position\n        p.x += 0.1 * p.xSpeed\n        p.y += 0.1 * p.ySpeed\n\n        // Get older\n        p.age++\n\n        // Kill if too old\n        if (p.age > this.lifespan) {\n          this.kill(p.name)\n          this.deathCount++\n        }\n      }\n    }\n    App.initDraw = function() {\n      this.ctx.beginPath()\n      this.ctx.rect(0, 0, this.width, this.height)\n      this.ctx.fillStyle = 'black'\n      this.ctx.fill()\n      this.ctx.closePath()\n    }\n    App.draw = function() {\n      this.drawnInLastFrame = 0\n      if (!this.particles.length) return false\n\n      this.ctx.beginPath()\n      this.ctx.rect(0, 0, this.width, this.height)\n      this.ctx.fillStyle = 'rgba(0, 0, 0, 0.1)'\n      //this.ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\n      this.ctx.fill()\n      this.ctx.closePath()\n\n      for (var i = 0; i < this.particles.length; i++) {\n        // Draw particle\n        var p = this.particles[i]\n\n        var h, s, l, a\n\n        h = p.hue + this.stepCount / 30\n        s = p.sat\n        l = p.lum\n        a = 1\n\n        var last = this.dataXYtoCanvasXY(p.xLast, p.yLast),\n          now = this.dataXYtoCanvasXY(p.x, p.y)\n        var attracSpot = this.grid[p.attractor.gridSpotIndex],\n          attracXY = this.dataXYtoCanvasXY(attracSpot.x, attracSpot.y)\n        var oldAttracSpot = this.grid[p.attractor.oldIndex],\n          oldAttracXY = this.dataXYtoCanvasXY(oldAttracSpot.x, oldAttracSpot.y)\n\n        this.ctx.beginPath()\n\n        this.ctx.strokeStyle =\n          'hsla(' + h + ', ' + s + '%, ' + l + '%, ' + a + ')'\n        this.ctx.fillStyle =\n          'hsla(' + h + ', ' + s + '%, ' + l + '%, ' + a + ')'\n\n        // Particle trail\n        this.ctx.moveTo(last.x, last.y)\n        this.ctx.lineTo(now.x, now.y)\n\n        this.ctx.lineWidth = 1.5 * this.dataToImageRatio\n        this.ctx.stroke()\n        this.ctx.closePath()\n\n        // Attractor positions\n        this.ctx.beginPath()\n        this.ctx.lineWidth = 1.5 * this.dataToImageRatio\n        this.ctx.moveTo(oldAttracXY.x, oldAttracXY.y)\n        this.ctx.lineTo(attracXY.x, attracXY.y)\n        this.ctx.arc(\n          attracXY.x,\n          attracXY.y,\n          1.5 * this.dataToImageRatio,\n          0,\n          2 * Math.PI,\n          false\n        )\n\n        //a /= 20;\n        this.ctx.strokeStyle =\n          'hsla(' + h + ', ' + s + '%, ' + l + '%, ' + a + ')'\n        this.ctx.fillStyle =\n          'hsla(' + h + ', ' + s + '%, ' + l + '%, ' + a + ')'\n        this.ctx.stroke()\n        this.ctx.fill()\n\n        this.ctx.closePath()\n\n        // UI counter\n        this.drawnInLastFrame++\n      }\n    }\n    App.dataXYtoCanvasXY = function(x, y) {\n      var zoom = 1.6\n      var xx = this.xC + x * zoom * this.dataToImageRatio,\n        yy = this.yC + y * zoom * this.dataToImageRatio\n\n      return { x: xx, y: yy }\n    }\n\n    App.setup()\n    App.draw()\n\n    var frame = function() {\n      App.evolve()\n      requestAnimationFrame(frame)\n    }\n    frame()\n\n    /**\n     * Some old util I use at times\n     *\n     * @param {Number} Xstart X value of the segment starting point\n     * @param {Number} Ystart Y value of the segment starting point\n     * @param {Number} Xtarget X value of the segment target point\n     * @param {Number} Ytarget Y value of the segment target point\n     * @param {Boolean} realOrWeb true if Real (Y towards top), false if Web (Y towards bottom)\n     * @returns {Number} Angle between 0 and 2PI\n     */\n    const segmentAngleRad = function(\n      Xstart,\n      Ystart,\n      Xtarget,\n      Ytarget,\n      realOrWeb\n    ) {\n      var result // Will range between 0 and 2PI\n      if (Xstart == Xtarget) {\n        if (Ystart == Ytarget) {\n          result = 0\n        } else if (Ystart < Ytarget) {\n          result = Math.PI / 2\n        } else if (Ystart > Ytarget) {\n          result = (3 * Math.PI) / 2\n        } else {\n        }\n      } else if (Xstart < Xtarget) {\n        result = Math.atan((Ytarget - Ystart) / (Xtarget - Xstart))\n      } else if (Xstart > Xtarget) {\n        result = Math.PI + Math.atan((Ytarget - Ystart) / (Xtarget - Xstart))\n      }\n\n      result = (result + 2 * Math.PI) % (2 * Math.PI)\n\n      if (!realOrWeb) {\n        result = 2 * Math.PI - result\n      }\n\n      return result\n    }\n  }, [])\n  return (\n    <div className=\"App\">\n      <div className=\"ui\">\n        <p className=\"zoom\">\n          <span className=\"zoom zoomin\">+</span>\n          <span className=\"zoom zoomout\">-</span>\n        </p>\n        <p className=\"zoomlevel\">\n          <span className=\"percent\">100</span> % - (<span className=\"width\" />\n          px)(\n          <span className=\"height\" />\n          px)\n        </p>\n        <p>\n          Dead: <span className=\"dead\">0</span>\n        </p>\n        <p>\n          Alive: <span className=\"alive\">0</span>\n        </p>\n        <p>\n          Drawn: <span className=\"drawn\">0</span>\n        </p>\n        <p>\n          <span className=\"fps\">0</span> FPS\n        </p>\n        <a className=\"save\" href=\"\" download=\"capture.png\">\n          Save\n        </a>\n      </div>\n\n      <img\n        className=\"App-logo\"\n        src=\"https://s3.ap-southeast-1.amazonaws.com/getlinks-files/static-web-image/getlinks_logo.png\"\n      />\n\n      <div className=\"App-teams\">\n        {teams.map(team => (\n          <Team key={team.name} name={team.name} players={team.players} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default AppComponent\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}